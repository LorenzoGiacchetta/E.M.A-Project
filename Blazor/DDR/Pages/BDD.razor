@using DDR.Models
@page "/BaseDatos"
@using Microsoft.AspNetCore.Mvc
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@*<AuthorizeView Roles="Admin" Context="entity">*@
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var patente in Bdpatente)
            {
                <tr>
                    <td>@patente.Caracteres</td>
                    <td>@patente.Pagada</td>
                </tr>
            }
        </tbody>
    </table>

<h3>BDD</h3>
<h2>Cargar una nueva patente en la base de datos </h2>
<EditForm Model="@modelpat">
    <table class="table">
        <tr>
            <td>caracteres:</td>
            <td><input type="text" @bind="cargarPat"></input></td>

        </tr>

        <button type="submit" class="btn btn-primary" @onclick="CargarNewPatente">cargar</button>
    </table>


</EditForm>

@*</AuthorizeView>*@



@code {
    string NewPatente { get; set; }
    string cargarPat { get; set; }
    [Authorize(Roles = "Admin")]
    public class AdministrationController : Controller
    {
        public IActionResult Index() =>
            Content("Admin");
    }
    public Patente modelpat = new Patente();
    private Patente[] Bdpatente;
    private async Task CargarNewPatente()
    {


        using var context = DbFactory.CreateDbContext();

        var PatenteNew = new Patente
            {
                Caracteres = cargarPat
            };
        context.Patentes.Add(PatenteNew);
        context.SaveChanges();

    }



}

